{"version":3,"sources":["components/HeaderComponent.js","components/TeaserComponent.js","shared/recipes.js","components/ListComponent.js","components/RecipeComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","allTags","Set","this","props","recipes","map","recipe","tags","tag","add","Array","sort","Navbar","expand","variant","className","Brand","onClick","setFilter","Toggle","aria-controls","Collapse","id","Nav","activeKey","filter","getTags","Item","Link","eventKey","onSelect","Component","Teaser","Col","sm","md","xl","Card","to","Row","Img","src","Body","class","name","Badge","pill","ingredients","directions","imgAuthor","imgLicense","imgSource","List","includes","Container","fluid","filterRecipes","Recipe","xs","icon","faTimes","color","ListGroup","item","lg","span","offset","Image","rounded","href","target","rel","Main","state","bind","setState","exact","path","component","match","params","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8930ee57.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nclass Header extends Component {\n\n  // gather tags from all recipes\n  getTags() {\n    let allTags = new Set();\n    this.props.recipes.map(recipe => recipe.tags.map(tag => allTags.add(tag)));\n    return new Array(...allTags).sort();\n  }\n  \n  render() {\n    return (\n      <Navbar expand=\"md\" variant=\"dark\" className=\"pt-0 bg-green\">\n        <div className=\"container\">\n          <Navbar.Brand onClick={() => this.props.setFilter(null)} className=\"link\">\n            <h1 className=\"text text-header\">Butternut</h1>\n            <p className=\"text text-header text-small\">simple vegan recipes</p>  \n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar\" />\n          <Navbar.Collapse id=\"navbar\">\n            <Nav className=\"ml-auto\" activeKey={this.props.filter}>\n              {this.getTags().map(tag =>\n                <Nav.Item>\n                  <Nav.Link eventKey={tag} onSelect={() => this.props.setFilter(tag)}>\n                    {tag}\n                  </Nav.Link>\n                </Nav.Item>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Teaser extends Component {\n  render() {\n    const recipe = this.props.recipe;\n\n    return (\n      <Col sm={12} md={6} xl={4} className=\"mt-2 mb-2\">\n        <Card className=\"teaser\">\n          <Link to={ `/r/${recipe.id}` } className=\"text-teaser\">\n            <Row>\n              <Card.Img\n                src={\"../assets/images/\" + recipe.id + \".jpg\"}\n                className=\"img-teaser\"\n              />\n              <Card.Body class=\"teaser-body\">\n                <h2 className=\"text text-teaser-heading\">{recipe.name}</h2>\n                <div className=\"tags\">\n                  {recipe.tags.sort().map(\n                    tag => <Badge pill className=\"text text-tag text-tag-small\">{tag}</Badge>\n                  )}\n                </div>\n              </Card.Body>\n            </Row>\n          </Link>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default Teaser;","const recipes = [\n  {\n    id: 0,\n    name: \"Seitan Burger\",\n    tags: [\"quick\", \"main\", \"protein\"],\n    ingredients: [\"bun\", \"seitan patty\", \"tomato\", \"mayonnaise\"],\n    directions: [\"slice bread\", \"put stuff inside\", \"done\"],\n    imgAuthor: \"Roee Shpernik\",\n    imgLicense: \"CC BY-SA 4.0\",\n    imgSource: \"https://commons.wikimedia.org/wiki/File:%D7%94%D7%9E%D7%91%D7%95%D7%A8%D7%92%D7%A8_%D7%98%D7%91%D7%A2%D7%95%D7%A0%D7%99.jpg\"\n  },\n  {\n    id: 1,\n    name: \"Tiramisu\",\n    tags: [\"dessert\", \"italian\"],\n    ingredients: [\"zwieback\", \"coffee\", \"soy milk\", \"coconut milk\", \"pudding\"],\n    directions: [\"make strong coffee\", \"make vanilla pudding with soy milk\", \"mix pudding with coconut milk\", \"make layers\"],\n    imgAuthor: \"Raffaele Diomede\",\n    imgLicense: \"CC BY 2.0\",\n    imgSource: \"https://commons.wikimedia.org/wiki/File:Tiramisu_-_Raffaele_Diomede.jpg\"\n  },\n  {\n    id: 2,\n    name: \"Yakisoba\",\n    tags: [\"main\", \"asian\", \"protein\"],\n    ingredients: [\"rice noodles\", \"hoisin sauce\", \"onion\", \"carrots\", \"sesame\"],\n    directions: [\"fry onion and carrots in a wok\", \"cook rice noodles for 3 minutes\", \"add noodles to wok\", \"add hoisin sauce and sesame\"],\n    imgAuthor: \"Shinkawana\",\n    imgLicense: \"CC BY 3.0\",\n    imgSource: \"https://commons.wikimedia.org/wiki/File:Fujinomiya-yakisoba.jpg\"\n  },\n  {\n    id: 3,\n    name: \"Pizza\",\n    tags: [\"main\", \"italian\"],\n    ingredients: [\"flour\", \"yeast\", \"olive oil\", \"salt\"],\n    directions: [\"mix ingredients with lukewarm water\", \"knead for 10 minutes\", \"let it rest at a warm place\"],\n    imgAuthor: \"Lokesh Dhakar\",\n    imgLicense: \"CC BY 2.0\",\n    imgSource: \"https://commons.wikimedia.org/wiki/File:Vegan_pizza_at_Pizza_Luc%C3%A9.jpg\"\n  },\n  {\n    id: 4,\n    name: \"Brownies\",\n    tags: [\"dessert\"],\n    ingredients: [\"flour\", \"cocoa\", \"margarine\"],\n    directions: [\"mix everything\", \"put in oven\", \"done\"],\n    imgAuthor: \"Veganbaking.net\",\n    imgLicense: \"CC BY-SA 2.0\",\n    imgSource: \"https://commons.wikimedia.org/wiki/File:Vegan_Chocolate_Fudge.jpg\"\n  },\n  {\n    id: 5,\n    name: \"Spring Rolls\",\n    tags: [\"main\", \"asian\", \"quick\"],\n    ingredients: [\"carrots\", \"cabbage\", \"rice paper\", \"tofu\"],\n    directions: [\"stir fry veggies and tofu shortly\", \"moisten rice paper\", \"put veggies on rice paper and roll\", \"fry spring roll\"],\n    imgAuthor: \"Jennifer\",\n    imgLicense: \"CC BY-SA 2.0\",\n    imgSource: \"https://commons.wikimedia.org/wiki/File:Vegan_spring_rolls.jpg\"\n  }\n];\n\nexport default recipes;","import React, { Component } from 'react';\nimport Teaser from './TeaserComponent';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport recipes from '../shared/recipes';\n\nclass List extends Component {\n  \n  filterRecipes(filter = this.props.filter) {\n    return filter\n      ? recipes.filter(recipe => recipe.tags.includes(filter))\n      : recipes;\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          {this.filterRecipes().map(\n            recipe => <Teaser recipe={recipe} />\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default List;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport Image from 'react-bootstrap/Image';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nclass Recipe extends Component {\n  render() {\n    const recipe = this.props.recipe;\n\n    return (\n      <Container>\n        <Row className=\"mt-3\">\n          <Col xs={9} sm={11}>\n            <h2 className=\"text text-recipe-heading\">{recipe.name}</h2>\n          </Col>\n          <Col xs={1}>\n            <Link to='/'>\n              <FontAwesomeIcon icon={faTimes} color=\"black\"/>\n            </Link>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={6}>\n            <h3 className=\"text text-recipe-subheading\">Ingredients</h3>\n            <ListGroup>\n              {recipe.ingredients.map(item =>\n                <ListGroup.Item>{item}</ListGroup.Item>\n              )}\n            </ListGroup>\n          </Col>\n          <Col xs={12} sm={6}>\n            <h3 className=\"text text-recipe-subheading\">Directions</h3>\n            <ListGroup variant=\"flush\">\n              {recipe.directions.map(item =>\n                <ListGroup.Item>{item}</ListGroup.Item>\n              )}\n            </ListGroup>\n          </Col>\n        </Row>\n        <Row className=\"mt-3 justify-content-center tags\">\n          {recipe.tags.sort().map(\n            tag => <Badge pill className=\"text text-tag text-tag-big\">{tag}</Badge>\n          )}\n        </Row>\n        <Row className=\"mt-3\">\n          <Col xs={12} lg={{span: 10, offset: 1}} xl={{span: 8, offset: 2}}>\n            <Image src={\"../assets/images/\" + recipe.id + \".jpg\"} fluid rounded />\n            <p><small>\n              Image: <a href={recipe.imgSource} target=\"_blank\" rel=\"noreferrer\">{recipe.imgAuthor}</a> ({recipe.imgLicense})\n            </small></p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Recipe;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './HeaderComponent';\nimport List from './ListComponent';\nimport Recipe from './RecipeComponent';\nimport recipes from '../shared/recipes.js';\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: ''\n    }\n    this.setFilter = this.setFilter.bind(this);\n  }\n\n  setFilter(tag) {\n    this.setState({\n      filter: tag\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header recipes={recipes} setFilter={this.setFilter} filter={this.state.filter}/>\n        <Switch>\n          <Route\n            exact path=\"/\"\n            component={ () => <List recipes={recipes} filter={this.state.filter} />}\n          />\n          <Route\n            path=\"/r/:id\"\n            component={ ({match}) => <Recipe recipe={recipes[match.params.id]} /> }\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Main;","import { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Main from './components/MainComponent';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}